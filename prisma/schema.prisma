generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  Coordinator
  Member
  Visitor
}

enum EquipmentState {
  Avaliable
  Reserved
}

enum AuthorizationType {
  Reservation
  User
}

enum AuthorizationStatus {
  Pending
  Approved
  Denied
}

model User {
  id            Int             @id @default(autoincrement())
  cardid        String?         @unique @db.Char(10)
  name          String
  email         String          @unique
  password      String          @db.Text
  telegramid    String?         @unique
  occupation    String?
  type          UserType
  preferences   Json?           @default("{\"sendActionReg\": true}")
  profileimage  String?         @db.Text
  Relatory      Relatory[]
  Authorization Authorization[]
  ActualUsage   ActualUsage?
}

model Relatory {
  id      Int  @id @default(autoincrement())
  userId  User @relation(references: [id], fields: [userid])
  userid  Int  @unique
  actions Json
}

model Authorization {
  id             Int                 @id @default(autoincrement())
  userId         User?               @relation(references: [id], fields: [userid])
  userid         Int?
  type           AuthorizationType
  status         AuthorizationStatus
  laststatustime String
  data           Json
}

model SyncCode {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  telegramid String   @unique
  expiration DateTime @db.Timestamptz()
}

model ActualUsage {
  id     Int  @id @default(autoincrement())
  userId User @relation(references: [id], fields: [userid])
  userid Int  @unique
}